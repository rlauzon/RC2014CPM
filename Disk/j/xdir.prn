                ;
                ;			 XDIR.ASM
                ;		     REVISED 6/28/80
                ;
                ;	    EXTENDED (SORTED) DIRECTORY PROGRAM
                ;		BY KEITH PETERSEN, W8SDZ
                ;
                ;PRINTS A 3-WIDE DIRECTORY, SORTED ALPHABETICALLY,
                ;SHOWING EXTENT NUMBERS AND EXTENT SIZE.  BASED ON
                ;'FMAP' BY WARD CHRISTENSEN AND XDIR BY B. RATOFF.
                ;
                ;XDIR FILENAME.FILETYPE OR JUST XDIR
                ;ALLOWS '*' OR '?' TYPE SPECIFICATIONS
                ;DRIVE NAME MAY ALSO BE SPECIFIED
                ;
                ;07/31/79 CORRECTED ERROR IN CONSTAT TEST
                ;	  FOR ABORTING PRINT.  (KBP)
                ;
                ;08/16/79 ADD CONDITIONAL ASSEMBLY FOR CP/M
                ;	  ON H8 OR TRS-80.  (KBP)
                ;
                ;05/21/80 ADD ANI 7FH TO REMOVE FILE ATTRIBUTES
                ;	  TO MAKE COMPATIBLE WITH CPM-2. (KBP)
                ;
                ;06/28/80 FIX ERROR IN FILE SIZE PRINTOUTS. (KBP)
                ;
 0000 =         FALSE	EQU	0
 FFFF =         TRUE	EQU	NOT FALSE
                ;
 0000 #         BASE	SET	0
                ;
 0000 =         ALTCPM	EQU	FALSE	;PUT TRUE HERE FOR H8 OR TRS-80 CP/M
                ;
                	IF	ALTCPM
                BASE	SET	4200H
                	ENDIF
                ;
 005C =         FCB	EQU	BASE+5CH ;SYSTEM FCB
 0068 =         EXTENT	EQU	BASE+68H ;FCB EXTENT BYTE
 0003 =         NPL	EQU	3	;NUMBER OF NAMES PER LINE
 007C =         DELIM	EQU	7CH	;FENCE (DELIMITER) CHARACTER
                ;
 0100           	ORG	BASE+100H
                ;
 0100 C31401    	JMP	START	;JMP AROUND I.D.
 0103 584449522E	DB	'XDIR.COM 6/27/80 '
                ;
                ;SAVE THE STACK
 0114 210000    START	LXI	H,0
 0117 39        	DAD	SP	;H=STACK
 0118 227604    	SHLD	STACK	;SAVE IT
 011B 317604    	LXI	SP,STACK ;GET NEW STACK
                ;NO FCB SPECIFIED?
 011E 215D00    	LXI	H,FCB+1
 0121 7E        	MOV	A,M
 0122 FE20      	CPI	' '
 0124 C23001    	JNZ	GOTFCB
                ;NO FCB - MAKE FCB ALL '?'
 0127 060B      	MVI	B,11	;FN+FT COUNT
 0129 363F      QLOOP	MVI	M,'?'	;STORE '?' IN FCB
 012B 23        	INX	H
 012C 05        	DCR	B
 012D C22901    	JNZ	QLOOP
                ;LOOK UP THE FCB IN THE DIRECTORY
 0130 3E3F      GOTFCB	MVI	A,'?'	;MATCH ALL EXTENTS
 0132 326800    	STA	EXTENT
 0135 0E11      	MVI	C,FSRCHF ;GET 'SEARCH FIRST' FNC
 0137 115C00    	LXI	D,FCB
 013A CD0500    	CALL	BDOS	;READ FIRST
 013D 3C        	INR	A	;WERE THERE ANY?
 013E C25C01    	JNZ	SOME	;GOT SOME
 0141 CD2303    	CALL	ERXIT
 0144 2B2B4E4F54	DB	'++NOT FOUND$'
                ;
                ;READ MORE DIRECTORY ENTRIES
 0150 0E12      MOREDIR	MVI	C,FSRCHN ;SEARCH NEXT
 0152 115C00    	LXI	D,FCB
 0155 CD0500    	CALL	BDOS	;READ DIR ENTRY
 0158 3C        	INR	A	;CHECK FOR END (0FFH)
 0159 CA9001    	JZ	SPRINT	;NO MORE - SORT & PRINT
                ;POINT TO DIRECTORY ENTRY 
 015C 3D        SOME	DCR	A	;UNDO PREV 'INR A'
 015D E603      	ANI	3	;MAKE MODULUS 4
 015F 87        	ADD	A	;MULTIPLY...
 0160 87        	ADD	A	;..BY 32 BECAUSE
 0161 87        	ADD	A	;..EACH DIRECTORY
 0162 87        	ADD	A	;..ENTRY IS 32
 0163 87        	ADD	A	;..BYTES LONG
 0164 218100    	LXI	H,BASE+81H ;POINT TO BUFFER
                			;(SKIP TO FN/FT)
 0167 85        	ADD	L	;POINT TO ENTRY
 0168 6F        	MOV	L,A	;SAVE (CAN'T CARRY TO H)
                ;MOVE ENTRY TO TABLE
 0169 EB        	XCHG		;ENTRY TO DE
 016A 2A3303    	LHLD	NEXTT	;NEXT TABLE ENTRY TO HL
 016D 060B      	MVI	B,11	;LENGTH OF NAME
                ;
 016F 1A        TMOVE	LDAX	D	;GET ENTRY CHAR
 0170 E67F      	ANI	7FH	;REMOVE ATTRIBUTES
 0172 77        	MOV	M,A	;STORE IN TABLE
 0173 13        	INX	D
 0174 23        	INX	H
 0175 05        	DCR	B	;MORE?
 0176 C26F01    	JNZ	TMOVE
 0179 0614      	MVI	B,20	;LENGTH OF REST OF ENTRY
                ;
 017B 1A        TMOVE2	LDAX	D	;GET ENTRY CHARACTER
 017C 77        	MOV	M,A	;STORE IN TABLE
 017D 13        	INX	D
 017E 23        	INX	H
 017F 05        	DCR	B	;MORE?
 0180 C27B01    	JNZ	TMOVE2
 0183 223303    	SHLD	NEXTT	;SAVE UPDATED TABLE ADDR
 0186 3A3503    	LDA	COUNT	;GET PREV COUNT
 0189 3C        	INR	A
 018A 323503    	STA	COUNT
 018D C35001    	JMP	MOREDIR
                ;
                ;SORT AND PRINT
 0190 3A3503    SPRINT	LDA	COUNT	;INIT THE ORDER TABLE
 0193 213A03    	LXI	H,ORDER
 0196 117C04    	LXI	D,TABLE
 0199 011F00    	LXI	B,31	;ENTRY LENGTH
                ;
 019C 73        BLDORD	MOV	M,E	;SAVE LO ORD ADDR
 019D 23        	INX	H
 019E 72        	MOV	M,D	;SAVE HI ORD ADDR
 019F 23        	INX	H
 01A0 EB        	XCHG		;TABLE ADDR TO HL
 01A1 09        	DAD	B	;POINT TO NEXT ENTRY
 01A2 EB        	XCHG
 01A3 3D        	DCR	A	;MORE?
 01A4 C29C01    	JNZ	BLDORD	;..YES
 01A7 3A3503    	LDA	COUNT	;GET COUNT
 01AA 323603    	STA	SCOUNT	;SAVE AS # TO SORT
 01AD 3D        	DCR	A	;ONLY 1 ENTRY?
 01AE CADE01    	JZ	DONE	;..YES, SO SKIP SORT
                ;
 01B1 AF        SORT	XRA	A	;GET A ZERO
 01B2 323703    	STA	SWITCH	;SHOW NONE SWITCHED
 01B5 3A3603    	LDA	SCOUNT	;GET COUNT
 01B8 3D        	DCR	A	;USE 1 LESS
 01B9 327B04    	STA	TEMP	;SAVE # TO COMPARE
 01BC 323603    	STA	SCOUNT	;SAVE HIGHEST ENTRY
 01BF CADE01    	JZ	DONE	;EXIT IF NO MORE
 01C2 213A03    	LXI	H,ORDER ;POINT TO ORDER TABLE
                ;
 01C5 CDFD02    SORTLP	CALL	COMPR	;COMPARE 2 ENTRIES
 01C8 FC0F03    	CM	SWAP	;SWAP IF NOT IN ORDER
 01CB 23        	INX	H	;BUMP ORDER
 01CC 23        	INX	H	;..TABLE POINTER
 01CD 3A7B04    	LDA	TEMP	;GET COUNT
 01D0 3D        	DCR	A
 01D1 327B04    	STA	TEMP
 01D4 C2C501    	JNZ	SORTLP	;CONTINUE
                ;ONE PASS OF SORT DONE
 01D7 3A3703    	LDA	SWITCH	;ANY SWAPS DONE?
 01DA B7        	ORA	A
 01DB C2B101    	JNZ	SORT
                ;SORT IS ALL DONE - PRINT ENTRIES
 01DE 213A03    DONE	LXI	H,ORDER
 01E1 223303    	SHLD	NEXTT
                ;
                ;PRINT AN ENTRY
 01E4 0E03      	MVI	C,NPL	;NR. OF NAMES PER LINE
                ;
 01E6 C5        ENTRY:	PUSH	B
 01E7 0E0B      	MVI	C,CONST	;CK STATUS OF KB
 01E9 CD0500    	CALL	BDOS	;ANY KEY PRESSED?
 01EC C1        	POP	B
 01ED B7        	ORA	A
 01EE C22903    	JNZ	ABORT	;YES, ABORT
 01F1 2A3303    	LHLD	NEXTT	;GET ORDER TABLE POINTER
 01F4 5E        	MOV	E,M	;GET LO ADDR
 01F5 23        	INX	H
 01F6 56        	MOV	D,M	;GET HI ADDR
 01F7 23        	INX	H
 01F8 223303    	SHLD	NEXTT	;SAVE UPDATED TABLE POINTER
 01FB EB        	XCHG		;TABLE ENTRY TO HL
 01FC 0608      	MVI	B,8	;FILE NAME LENGTH
 01FE CDE202    	CALL	TYPEIT	;TYPE FILENAME
 0201 CDBC02    	CALL	PERIOD	;PERIOD AFTER FN
 0204 0603      	MVI	B,3	;GET THE FILETYPE
 0206 CDE202    	CALL	TYPEIT
 0209 7E        	MOV	A,M	;GET EXTENT NUMBER
 020A C630      	ADI	'0'	;CONVERT TO ASCII
 020C FE3A      	CPI	':'	;ABOVE ASCII '9' ?
 020E DA1302    	JC	ENTRY2
 0211 C607      	ADI	7
                ;
 0213 FE30      ENTRY2	CPI	'0'	;IS EXTENT NUMBER ZERO?
 0215 C21E02    	JNZ	ENTRY3	;NO, PRINT '+' THEN NUMBER
 0218 CDC902    	CALL	TWOSPCE	;IT'S ZERO - PRINT 2 SPACES
 021B C32802    	JMP	ENTRY4	;THEN PRINT SIZE
                ;
 021E F5        ENTRY3	PUSH	PSW	;SAVE EXTENT NUMBER
 021F 3E2B      	MVI	A,'+'
 0221 CDCE02    	CALL	TYPE	;PRINT '+'
 0224 F1        	POP	PSW	;GET EXTENT NUMBER
 0225 CDCE02    	CALL	TYPE	;PRINT IT
                ;
 0228 CDCC02    ENTRY4	CALL	SPACE	;SPACE OVER ONE
 022B 23        	INX	H
 022C 23        	INX	H
 022D 23        	INX	H
 022E 7E        	MOV	A,M	;GET EXTENT SIZE
 022F C5        	PUSH	B
 0230 CD4A02    	CALL	PDEC	;PRINT IT
 0233 C1        	POP	B
 0234 0D        	DCR	C	;ONE LESS ON THIS LINE
 0235 F5        	PUSH	PSW
 0236 C4C102    	CNZ	FENCE	;NO CR-LF NEEDED, DO FENCE
 0239 F1        	POP	PSW
 023A CCEC02    	CZ	CR	;CR-LF NEEDED
                ;SEE IF MORE ENTRIES
 023D 3A3503    	LDA	COUNT
 0240 3D        	DCR	A
 0241 323503    	STA	COUNT
 0244 C2E601    	JNZ	ENTRY	;YES, MORE
 0247 C32E03    	JMP	EXIT
                ;
                ;PRINT VALUE IN A IN UNSIGNED DECIMAL FORMAT
                ;
 024A 327904    PDEC:	STA	DTEMP	;SAVE THE NUMBER
 024D 3E64      	MVI	A,100
 024F 327804    	STA	Q
 0252 AF        	XRA	A	;CLEAR LEADING ZERO FLAG
 0253 327A04    	STA	LEAD0FL
                ; 
                ;DIVIDE A BY Q
                ;
 0256 3A7904    PDEC2:	LDA	DTEMP
 0259 4F        	MOV	C,A
 025A 3A7804    	LDA	Q
 025D 57        	MOV	D,A
 025E CDA102    	CALL	BDIV
 0261 78        	MOV	A,B
 0262 327904    	STA	DTEMP	;SAVE REMAINDER
 0265 79        	MOV	A,C
 0266 C600      	ADI	0
 0268 C27302    	JNZ	PDEC3
 026B 3A7A04    	LDA	LEAD0FL
 026E C600      	ADI	0
 0270 CA8102    	JZ	PDEC4
                ; 
 0273 79        PDEC3:	MOV	A,C
 0274 C630      	ADI	'0'	;CONVERT TO ASCII
 0276 CDCE02    	CALL	TYPE	;PRINT QUOTIENT
 0279 3E01      	MVI	A,1	;STOP SUPRESSING ZEROS
 027B 327A04    	STA	LEAD0FL
 027E C38402    	JMP	PDEC5
                ; 
 0281 CDCC02    PDEC4:	CALL	SPACE
                ; 
 0284 3A7804    PDEC5:	LDA	Q
 0287 4F        	MOV	C,A
 0288 160A      	MVI	D,10
 028A CDA102    	CALL	BDIV	;DIVIDE Q BY 10
 028D 79        	MOV	A,C
 028E 327804    	STA	Q
 0291 3A7804    	LDA	Q
 0294 FE01      	CPI	1
 0296 C25602    	JNZ	PDEC2
 0299 3A7904    	LDA	DTEMP
 029C C630      	ADI	'0'	;CONVERT TO ASCII
 029E C3CE02    	JMP	TYPE	;PRINT IT THEN RETURN
                ; 
                ;BYTE DIVISION ROUTINE
                ;
 02A1 0600      BDIV:	MVI	B,0
 02A3 2E08      	MVI	L,8
                ; 
 02A5 37        BDIVLP:	STC
 02A6 3F        	CMC
 02A7 79        	MOV	A,C
 02A8 17        	RAL
 02A9 4F        	MOV	C,A
 02AA 78        	MOV	A,B
 02AB 17        	RAL
 02AC 47        	MOV	B,A
 02AD 78        	MOV	A,B
 02AE 92        	SUB	D
 02AF FAB702    	JM	BDIV2
 02B2 47        	MOV	B,A
 02B3 79        	MOV	A,C
 02B4 F601      	ORI	1
 02B6 4F        	MOV	C,A
                ; 
 02B7 2D        BDIV2:	DCR	L
 02B8 C2A502    	JNZ	BDIVLP
 02BB C9        	RET
                ;
 02BC 3E2E      PERIOD	MVI	A,'.'
 02BE C3CE02    	JMP	TYPE
                ;
 02C1 CDCC02    FENCE	CALL	SPACE
 02C4 3E7C      	MVI	A,DELIM	;FENCE CHARACTER
 02C6 CDCE02    	CALL	TYPE
                ;
 02C9 CDCC02    TWOSPCE	CALL	SPACE
                ;
 02CC 3E20      SPACE	MVI	A,' '
                ;
                ;TYPE CHAR IN A
 02CE C5        TYPE	PUSH	B
 02CF D5        	PUSH	D
 02D0 E5        	PUSH	H
 02D1 E67F      	ANI	7FH	;REMOVE ATTRIBUTES
 02D3 5F        	MOV	E,A
 02D4 0E02      	MVI	C,WRCHR
 02D6 CD0500    	CALL	BDOS
 02D9 E1        	POP	H
 02DA D1        	POP 	D
 02DB C1        	POP	B
 02DC C9        	RET
                ;
 02DD 0E09      WRCON	MVI	C,PRINT
 02DF C30500    	JMP	BDOS
                ;
 02E2 7E        TYPEIT	MOV	A,M
 02E3 CDCE02    	CALL	TYPE
 02E6 23        	INX	H
 02E7 05        	DCR	B
 02E8 C2E202    	JNZ	TYPEIT
 02EB C9        	RET
                ;
 02EC 1E0D      CR	MVI	E,13	;PRINT
 02EE 0E02      	MVI	C,2	;C/R
 02F0 CD0500    	CALL	BDOS
 02F3 1E0A      	MVI	E,10	;LF
 02F5 0E02      	MVI	C,2
 02F7 CD0500    	CALL	BDOS
 02FA 0E03      	MVI	C,NPL	;NUMBER OF NAMES PER LINE
 02FC C9        	RET
                ;
                ;COMPARE ROUTINE FOR SORT
 02FD E5        COMPR	PUSH	H	;SAVE TABLE ADDR
 02FE 5E        	MOV	E,M	;LOAD LO
 02FF 23        	INX	H
 0300 56        	MOV	D,M	;LOAD HI
 0301 23        	INX	H
 0302 4E        	MOV	C,M
 0303 23        	INX	H
 0304 46        	MOV	B,M
                ;BC, DE NOW POINT TO ENTRIES TO BE COMPARED
 0305 EB        	XCHG
 0306 0A        CMPLP	LDAX	B
 0307 BE        	CMP	M
 0308 23        	INX	H
 0309 03        	INX	B
 030A CA0603    	JZ	CMPLP
 030D E1        	POP	H
 030E C9        	RET		;COND CODE TELLS ALL
                ;
                ;SWAP ENTRIES IN THE ORDER TABLE
 030F 3E01      SWAP	MVI	A,1
 0311 323703    	STA	SWITCH	;SHOW A SWAP WAS MADE
 0314 4E        	MOV	C,M
 0315 23        	INX	H
 0316 E5        	PUSH	H	;SAVE TABLE ADDR+1
 0317 46        	MOV	B,M
 0318 23        	INX	H
 0319 5E        	MOV	E,M
 031A 71        	MOV	M,C
 031B 23        	INX	H
 031C 56        	MOV	D,M
 031D 70        	MOV	M,B
 031E E1        	POP	H
 031F 72        	MOV	M,D
 0320 2B        	DCX	H	;BACK POINTER TO CORRECT LOC'N
 0321 73        	MOV	M,E
 0322 C9        	RET
                ;
                ;ERROR EXIT
 0323 D1        ERXIT	POP	D	;GET MSG
 0324 0E09      	MVI	C,PRINT
 0326 C32B03    	JMP	CALLB	;PRINT MSG, EXIT
                ;
                ;ABORT - READ CHAR ENTERED
 0329 0E01      ABORT	MVI	C,RDCHR
 032B CD0500    CALLB	CALL	BDOS	;DELETE THE CHAR
                ;
                ;FALL INTO EXIT
                ;EXIT - ALL DONE , RESTORE STACK
 032E 2A7604    EXIT	LHLD	STACK	;GET OLD STACK
 0331 F9        	SPHL		;MOVE TO STACK
 0332 C9        	RET		;..AND RETURN
                ;
 0333 7C04      NEXTT	DW	TABLE	;NEXT TABLE ENTRY
 0335 00        COUNT	DB	0	;ENTRY COUNT
 0336 00        SCOUNT	DB	0	;# TO SORT
 0337 00        SWITCH	DB	0	;SWAP SWITCH FOR SORT
 0338 8000      BUFAD	DW	BASE+80H ;OUTPUT ADDR
 033A           ORDER	DS	256	;ORDER TABLE (ROOM FOR 128 NAMES)
 043A           	DS	60	;STACK AREA
 0476           STACK	DS	2	;SAVE OLD STACK HERE
 0478           Q	DS	1	;FOR DIVIDER ROUTINE
 0479           DTEMP	DS	1	;FOR DIVIDER ROUTINE
 047A           LEAD0FL	DS	1	;LEADING ZERO FLAG
 047B           TEMP	DS	1	;SAVE DIR ENTRY
 047C =         TABLE	EQU	$	;READ ENTRIES IN HERE
                ;
                ; BDOS EQUATES
                ;
 0001 =         RDCHR	EQU	1	;READ CHAR FROM CONSOLE
 0002 =         WRCHR	EQU	2	;WRITE CHR TO CONSOLE
 0009 =         PRINT	EQU	9	;PRINT CONSOLE BUFF
 000B =         CONST	EQU	11	;CHECK CONS STAT
 000F =         FOPEN	EQU	15	;0FFH=NOT FOUND
 0010 =         FCLOSE	EQU	16	;   "	"
 0011 =         FSRCHF	EQU	17	;   "	"
 0012 =         FSRCHN	EQU	18	;   "	"
 0013 =         ERASE	EQU	19	;NO RET CODE
 0014 =         FREAD	EQU	20	;0=OK, 1=EOF
 0015 =         FWRTE	EQU	21	;0=OK, 1=ERR, 2=?, 255=NO DIR SPC
 0016 =         FMAKE	EQU	22	;255=BAD
 0017 =         FREN	EQU	23	;255=BAD
 001A =         FDMA	EQU	26
 0005 =         BDOS	EQU	BASE+5
 0000 =         REBOOT	EQU	BASE+0
                ;
 047C           	END
